<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rongdu.loans.baiqishi.dao.MnoSmsRecordDao">
    
	<sql id="mnoSmsRecordColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.mno_detail_id AS "mnoDetailId",
		a.begin_time AS "beginTime",
		a.business_type AS "businessType",
		a.sms_type AS "smsType",
		a.amount AS "amount",
		a.other_num AS "otherNum",
		a.remark AS "remark",
		a.create_by AS "createBy",
		a.create_time AS "createTime",
		a.update_by AS "updateBy",
		a.update_time AS "updateTime",
		a.del AS "del"
	</sql>
	
	<sql id="mnoSmsRecordJoins">

	</sql>
    
	<sql id="insertValues">
	(		
		#{id},
		#{userId},
		#{mnoDetailId},
		#{beginTime},
		#{businessType},
		#{smsType},
		#{amount},
		#{otherNum},
		#{remark},
		#{createBy},
		#{createTime},
		#{updateBy},
		#{updateTime},
		#{del}
	)	
	</sql>
	
	<sql id="insertBatchValues">
	(		
		#{entity.id},
		#{entity.userId},
		#{entity.mnoDetailId},
		#{entity.beginTime},
		#{entity.businessType},
		#{entity.smsType},
		#{entity.amount},
		#{entity.otherNum},
		#{entity.remark},
		#{entity.createBy},
		#{entity.createTime},
		#{entity.updateBy},
		#{entity.updateTime},
		#{entity.del}
	)	
	</sql>
	
	<sql id="insertColumns">
	(		
		id,
		user_id,
		mno_detail_id,
		begin_time,
		business_type,
		sms_type,
		amount,
		other_num,
		remark,
		create_by,
		create_time,
		update_by,
		update_time,
		del
	) 
	</sql>
	
	<sql id="updateColumns">		
		user_id = #{userId},
		mno_detail_id = #{mnoDetailId},
		begin_time = #{beginTime},
		business_type = #{businessType},
		sms_type = #{smsType},
		amount = #{amount},
		other_num = #{otherNum},
		remark = #{remark},
		update_by = #{updateBy},
		update_time = #{updateTime}
	</sql>
	
	<sql id="updateSelectiveColumns">
		<set>
			<if test="entity.userId != null">
				user_id = #{entity.userId},
			</if>
			<if test="entity.mnoDetailId != null">
				mno_detail_id = #{entity.mnoDetailId},
			</if>
			<if test="entity.beginTime != null">
				begin_time = #{entity.beginTime},
			</if>
			<if test="entity.businessType != null">
				business_type = #{entity.businessType},
			</if>
			<if test="entity.smsType != null">
				sms_type = #{entity.smsType},
			</if>
			<if test="entity.amount != null">
				amount = #{entity.amount},
			</if>
			<if test="entity.otherNum != null">
				other_num = #{entity.otherNum},
			</if>
			<if test="entity.remark != null">
				remark = #{entity.remark},
			</if>
			<if test="entity.updateBy != null">
				update_by = #{entity.updateBy},
			</if>
			<if test="entity.updateTime != null">
				update_time = #{entity.updateTime},
			</if>
		</set>
	</sql>
	
	<sql id="whereByCriteriaList">
		<where>
			<foreach collection="criteriaList" item="criteria" separator=" AND ">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="AND |OR ">
						<foreach collection="criteria.pairList" item="pair">
							<choose>
								<when test="pair.criterion.singleValue">
									${pair.logic} ${pair.criterion.column}
									${pair.criterion.match}
									${pair.criterion.value}
								</when>
								<when test="pair.criterion.betweenValue">
									${pair.logic} ${pair.criterion.column}
									${pair.criterion.match}
									${pair.criterion.value} and
									${pair.criterion.secondValue}
								</when>
								<when test="pair.criterion.listValue">
									${pair.logic} ${pair.criterion.column} ${pair.criterion.match}
									<foreach collection="pair.criterion.value" item="item" open="(" close=")" separator=",">
										#{item}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	
	<sql id="whereByCriteria">
		<where>
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="AND |OR ">
						<foreach collection="criteria.pairList" item="pair">
							<choose>
								<when test="pair.criterion.singleValue">
									${pair.logic} ${pair.criterion.column}
									${pair.criterion.match}
									${pair.criterion.value}
								</when>
								<when test="pair.criterion.betweenValue">
									${pair.logic} ${pair.criterion.column}
									${pair.criterion.match}
									${pair.criterion.value} and
									${pair.criterion.secondValue}
								</when>
								<when test="pair.criterion.listValue">
									${pair.logic} ${pair.criterion.column} ${pair.criterion.match}
									<foreach collection="pair.criterion.value" item="item" open="(" close=")" separator=",">
										#{item}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
		</where>
	</sql>
	
   <sql id="orderBy">
		ORDER BY a.create_time DESC
	</sql>
	
   <sql id="pageOrderBy">
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_time DESC
			</otherwise>
		</choose>
	</sql>
  
  	<select id="get" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		WHERE a.id = #{id}
	</select>

  	<select id="getById" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		WHERE a.id = #{id}
	</select>
		
    <select id="getByCriteria" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteria" />
	</select>
	
	<select id="findAllByCriteria" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteria" />
		<include refid="orderBy" />
	</select>
	
	<select id="findAllByCriteriaList" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteriaList" />
		<include refid="orderBy" />
	</select>
	
	<select id="getPage" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		<include refid="pageOrderBy" />
	</select>
	
	<select id="getPageByCriteria" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteria" />
		<include refid="pageOrderBy" />
	</select>
	
	<select id="getPageByCriteriaList" resultType="MnoSmsRecord">
		SELECT 
		<include refid="mnoSmsRecordColumns"/>
		FROM baiqishi_mno_sms_record a
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteriaList" />
		<include refid="pageOrderBy" />
	</select>
	
	<select id="countByCriteria" resultType="Long">
		SELECT COUNT(1) FROM baiqishi_mno_sms_record
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteria" />
	</select>
	
	<select id="countByCriteriaList" resultType="Long">
		SELECT COUNT(1) FROM baiqishi_mno_sms_record
		<include refid="mnoSmsRecordJoins"/>
		<include refid="whereByCriteriaList" />
	</select>
	
	<insert id="insert">
		INSERT INTO baiqishi_mno_sms_record
		<include refid="insertColumns"/>
		VALUES 
		<include refid="insertValues"/>
	</insert>
	
	<insert id="insertBatch">
		INSERT INTO baiqishi_mno_sms_record
		<include refid="insertColumns"/>
		VALUES
		<foreach collection="list" item="entity" index="index" separator=",">
         <include refid="insertBatchValues"/>
        </foreach>	
	</insert>
	
	<update id="update">
		UPDATE baiqishi_mno_sms_record SET 
		<include refid="updateColumns"/>
		WHERE id = #{id}
	</update>
	
	<update id="updateByCriteriaSelective">
		UPDATE baiqishi_mno_sms_record 
		<include refid="updateSelectiveColumns"/>
		<include refid="whereByCriteria"/>
	</update>
	
	<update id="updateByCriteriaListSelective">
		UPDATE baiqishi_mno_sms_record 
		<include refid="updateSelectiveColumns"/>
		<include refid="whereByCriteriaList"/>
	</update>

	<update id="updateByIdSelective">
		UPDATE baiqishi_mno_sms_record		
		<include refid="updateSelectiveColumns"/>
		WHERE id = #{entity.id}
	</update>

	<update id="delete">
		UPDATE baiqishi_mno_sms_record
		SET del = 1
		,update_by=#{updateBy}
		WHERE id = #{id}
	</update>
	
	<update id="deleteByCriteria">
		UPDATE baiqishi_mno_sms_record
		SET del = 1
		,update_by=#{entity.updateBy}
		<include refid="whereByCriteria"/>
	</update>
	
	<update id="deleteBatch">
		UPDATE baiqishi_mno_sms_record 
		SET del = 1
		,update_by=#{entity.updateBy}
		WHERE id in
		<foreach collection="ids" index="index" item="id" open="(" separator="," close=")">#{id} </foreach>    
	</update>
	
	<update id="deleteByCriteriaList">
		UPDATE baiqishi_mno_sms_record
		SET del = 1
		,update_by=#{entity.updateBy}
		<include refid="whereByCriteriaList"/>
	</update>	
	
	<update id="deleteTruely">
		DELETE FROM baiqishi_mno_sms_record
		WHERE id = #{id}
	</update>
	
	<update id="deleteTruelyByCriteria">
		DELETE FROM baiqishi_mno_sms_record
		<include refid="whereByCriteria"/>
	</update>
	
	<update id="deleteTruelyByCriteriaList">
		DELETE FROM baiqishi_mno_sms_record
		<include refid="whereByCriteriaList"/>
	</update>
	
	<update id="deleteBatchTruely">
		DELETE FROM baiqishi_mno_sms_record
		WHERE id in
		<foreach collection="ids" index="index" item="id" open="(" separator="," close=")">#{id} </foreach>    
	</update>
	
	
	 
</mapper>