<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rongdu.loans.loan.dao.LoanGoodsBagDao">

    <sql id="loanGoodsBagColumns">
		a.id AS "id",
		a.loan_amt AS "loanAmt",
		a.bag_amt AS "bagAmt",
		a.remark AS "remark",
		a.create_time AS "createTime",
		a.update_by AS "updateBy",
		a.update_time AS "updateTime",
		a.del AS "del"
	</sql>

    <sql id="loanGoodsBagJoins">
    </sql>

    <sql id="insertValues">
	(		
		#{id},
		#{loanAmt},
		#{bagAmt},
		#{remark},
		#{createTime},
		#{updateBy},
		#{updateTime},
		#{del}
	)	
	</sql>

    <sql id="insertBatchValues">
	(		
		#{entity.id},
		#{entity.loanAmt},
		#{entity.bagAmt},
		#{entity.remark},
		#{entity.createTime},
		#{entity.updateBy},
		#{entity.updateTime},
		#{entity.del}
	)	
	</sql>

    <sql id="insertColumns">
	(		
		id,
		loan_amt,
		bag_amt,
		remark,
		create_time,
		update_by,
		update_time,
		del
	) 
	</sql>

    <sql id="updateColumns">
		loan_amt = #{loanAmt},
		bag_amt = #{bagAmt},
		remark = #{remark},
		update_by = #{updateBy},
		update_time = #{updateTime}
	</sql>

    <sql id="updateSelectiveColumns">
        <set>
            <if test="entity.loanAmt != null">
                loan_amt = #{entity.loanAmt},
            </if>
            <if test="entity.bagAmt != null">
                bag_amt = #{entity.bagAmt},
            </if>
            <if test="entity.remark != null">
                remark = #{entity.remark},
            </if>
            <if test="entity.updateBy != null">
                update_by = #{entity.updateBy},
            </if>
            <if test="entity.updateTime != null">
                update_time = #{entity.updateTime},
            </if>
        </set>
    </sql>

    <sql id="whereByCriteriaList">
        <where>
            <foreach collection="criteriaList" item="criteria" separator=" AND ">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="AND |OR ">
                        <foreach collection="criteria.pairList" item="pair">
                            <choose>
                                <when test="pair.criterion.singleValue">
                                    ${pair.logic} ${pair.criterion.column}
                                    ${pair.criterion.match}
                                    ${pair.criterion.value}
                                </when>
                                <when test="pair.criterion.betweenValue">
                                    ${pair.logic} ${pair.criterion.column}
                                    ${pair.criterion.match}
                                    ${pair.criterion.value} and
                                    ${pair.criterion.secondValue}
                                </when>
                                <when test="pair.criterion.listValue">
                                    ${pair.logic} ${pair.criterion.column} ${pair.criterion.match}
                                    <foreach collection="pair.criterion.value" item="item" open="(" close=")" separator=",">
                                        #{item}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="whereByCriteria">
        <where>
            <if test="criteria.valid">
                <trim prefix="(" suffix=")" prefixOverrides="AND |OR ">
                    <foreach collection="criteria.pairList" item="pair">
                        <choose>
                            <when test="pair.criterion.singleValue">
                                ${pair.logic} ${pair.criterion.column}
                                ${pair.criterion.match}
                                ${pair.criterion.value}
                            </when>
                            <when test="pair.criterion.betweenValue">
                                ${pair.logic} ${pair.criterion.column}
                                ${pair.criterion.match}
                                ${pair.criterion.value} and
                                ${pair.criterion.secondValue}
                            </when>
                            <when test="pair.criterion.listValue">
                                ${pair.logic} ${pair.criterion.column} ${pair.criterion.match}
                                <foreach collection="pair.criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </where>
    </sql>

    <sql id="orderBy">
		ORDER BY a.create_time DESC
	</sql>

    <sql id="pageOrderBy">
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </sql>

    <select id="get" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="getById" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="getByCriteria" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteria"/>
    </select>

    <select id="findAllByCriteria" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteria"/>
        <include refid="orderBy"/>
    </select>

    <select id="findAllByCriteriaList" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteriaList"/>
        <include refid="orderBy"/>
    </select>

    <select id="getPage" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        <include refid="pageOrderBy"/>
    </select>

    <select id="getPageByCriteria" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteria"/>
        <include refid="pageOrderBy"/>
    </select>

    <select id="getPageByCriteriaList" resultType="LoanGoodsBag">
        SELECT
        <include refid="loanGoodsBagColumns"/>
        FROM loan_goods_bag a
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteriaList"/>
        <include refid="pageOrderBy"/>
    </select>

    <select id="countByCriteria" resultType="Long">
        SELECT COUNT(1) FROM loan_goods_bag
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteria"/>
    </select>

    <select id="countByCriteriaList" resultType="Long">
        SELECT COUNT(1) FROM loan_goods_bag
        <include refid="loanGoodsBagJoins"/>
        <include refid="whereByCriteriaList"/>
    </select>

    <insert id="insert">
        INSERT INTO loan_goods_bag
        <include refid="insertColumns"/>
        VALUES
        <include refid="insertValues"/>
    </insert>

    <insert id="insertBatch">
        INSERT INTO loan_goods_bag
        <include refid="insertColumns"/>
        VALUES
        <foreach collection="list" item="entity" index="index" separator=",">
            <include refid="insertBatchValues"/>
        </foreach>
    </insert>

    <update id="update">
        UPDATE loan_goods_bag SET
        <include refid="updateColumns"/>
        WHERE id = #{id}
    </update>

    <update id="updateByCriteriaSelective">
        UPDATE loan_goods_bag
        <include refid="updateSelectiveColumns"/>
        <include refid="whereByCriteria"/>
    </update>

    <update id="updateByCriteriaListSelective">
        UPDATE loan_goods_bag
        <include refid="updateSelectiveColumns"/>
        <include refid="whereByCriteriaList"/>
    </update>

    <update id="updateByIdSelective">
        UPDATE loan_goods_bag
        <include refid="updateSelectiveColumns"/>
        WHERE id = #{entity.id}
    </update>

    <update id="delete">
		UPDATE loan_goods_bag
		SET del = 1
		,update_by=#{updateBy}
		WHERE id = #{id}
	</update>

    <update id="deleteByCriteria">
        UPDATE loan_goods_bag
        SET del = 1
        ,update_by=#{entity.updateBy}
        <include refid="whereByCriteria"/>
    </update>

    <update id="deleteBatch">
        UPDATE loan_goods_bag
        SET del = 1
        ,update_by=#{entity.updateBy}
        WHERE id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">#{id}</foreach>
    </update>

    <update id="deleteByCriteriaList">
        UPDATE loan_goods_bag
        SET del = 1
        ,update_by=#{entity.updateBy}
        <include refid="whereByCriteriaList"/>
    </update>

    <update id="deleteTruely">
		DELETE FROM loan_goods_bag
		WHERE id = #{id}
	</update>

    <update id="deleteTruelyByCriteria">
        DELETE FROM loan_goods_bag
        <include refid="whereByCriteria"/>
    </update>

    <update id="deleteTruelyByCriteriaList">
        DELETE FROM loan_goods_bag
        <include refid="whereByCriteriaList"/>
    </update>

    <update id="deleteBatchTruely">
        DELETE FROM loan_goods_bag
        WHERE id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">#{id}</foreach>
    </update>


    <sql id="loanGoodsVoColumns">
		a.id AS "id",
		a.loan_amt AS "loanAmt",
		a.bag_amt AS "bagAmt",
		lg.goods_name AS "goodsName",
	    lg.goods_price AS "goodsPrice",
	    lg.goods_pic AS "goodsPic",
	    lg.goods_num AS "goodsNum"
	</sql>


    <select id="getLoanGoods" resultType="com.rongdu.loans.loan.vo.LoanGoodsVO">
        SELECT
        <include refid="loanGoodsVoColumns"/>
        from loan_goods_bag a
        left join `loan_goods` lg on a.id=lg.bag_id
        where a.del=0 and a.loan_amt=#{loanAmt} and a.remark=#{remark}
    </select>


</mapper>